) #%>%
View(mx_df)
pwcWVwiGP <- mx_df %>%
group_by(Condition) %>%
rstatix::pairwise_t_test(
OwnWearing ~ Condition, paired = TRUE, detailed = TRUE,
p.adjust.method = "holm"
) #%>%
pwcWVwiGP <- mx_df %>%
group_by(Group) %>%
rstatix::pairwise_t_test(
OwnWearing ~ Wave, paired = TRUE, detailed = TRUE,
p.adjust.method = "holm"
) #%>%
knitr::opts_chunk$set(echo = TRUE)
#keeps out the hashtags in the knits
knitr::opts_chunk$set(comment = NA)
#eliminates scientific notation
options(scipen=999)
#will install the package if not already installed
#if(!require(knitr)){install.packages("knitr")}
#if(!require(tidyverse)){install.packages("tidyverse")}
#if(!require(psych)){install.packages("psych")}
#if(!require(ggpubr)){install.packages("ggpubr")}
#if(!require(rstatix)){install.packages("rstatix")}
#if(!require(MASS)){install.packages("MASS")}
#if(!require(effectsize)){install.packages("effectsize")}
#if(!require(WebPower)){install.packages("WebPower")}
library(tidyverse)
#change this to any different number (and rerun the simulation) to rework the chapter problem
set.seed(210813)
AttWhite<-round(c(rnorm(98,mean=76.79,sd=18.55),rnorm(95,mean=75.37,sd=18.99),rnorm(98, mean=77.47, sd=18.95), rnorm(95, mean=75.81, sd=19.29), rnorm(98, mean=77.79, sd=17.25), rnorm(95, mean=75.89, sd=19.44)),3) #sample size, M and SD for each cell; this will put it in a long file
#set upper bound for variable
AttWhite[AttWhite>100]<-100
#set lower bound for variable
AttWhite[AttWhite<0]<-0
AttArab<-round(c(rnorm(98,mean=64.11,sd=20.97),rnorm(95,mean=64.37,sd=20.03),rnorm(98, mean=64.16, sd=21.64), rnorm(95, mean=70.52, sd=18.55), rnorm(98, mean=65.29, sd=19.76), rnorm(95, mean=70.30, sd=17.98)),3)
#set upper bound for variable
AttArab[AttArab>100]<-100
#set lower bound for variable
AttArab[AttArab<0]<-0
rowID <- factor(seq(1,579))
caseID <- rep((1:193),3)
Wave <- c(rep("Baseline",193), rep("Post1", 193), rep ("Post2", 193))
COND <- c(rep("Friends", 98), rep("LittleMosque", 95), rep("Friends", 98), rep("LittleMosque", 95), rep("Friends", 98), rep("LittleMosque", 95))
#groups the 3 variables into a single df:  ID#, DV, condition
Murrar_df<- data.frame(rowID, caseID, Wave, COND, AttArab, AttWhite)
str(Murrar_df)
#make caseID a factor
Murrar_df[,'caseID'] <- as.factor(Murrar_df[,'caseID'])
#make Wave an ordered factor
Murrar_df$Wave <- factor(Murrar_df$Wave, levels = c("Baseline", "Post1", "Post2"))
#make COND an ordered factor
Murrar_df$COND <- factor(Murrar_df$COND, levels = c("Friends", "LittleMosque"))
str(Murrar_df)
Murrar_df$Diff <- Murrar_df$AttWhite - Murrar_df$AttArab
head(Murrar_df)
#to save the df as an .rds (think "R object") file on your computer;
#it should save in the same file as the .rmd file you are working with
#saveRDS(Murrar_df, "Murrar_RDS.rds")
#bring back the simulated dat from an .rds file
#Murrar_df <- readRDS("Murrar_RDS.rds")
#write the simulated data as a .csv
#write.table(Murrar_df, file="DiffCSV.csv", sep=",", col.names=TRUE, row.names=FALSE)
#bring back the simulated dat from a .csv file
#Murrar_df <- read.csv ("DiffCSV.csv", header = TRUE)
Diff.descripts <- psych::describeBy(Diff ~ COND + Wave, mat = TRUE, data = Murrar_df, digits = 3) #digits allows us to round the output
Diff.descripts
#Note. Recently my students and I have been having intermittent struggles with the describeBy function in the psych package. We have noticed that it is problematic when using .rds files and when using data directly imported from Qualtrics. If you are having similar difficulties, try uploading the .csv file and making the appropriate formatting changes.
write.table(Diff.descripts, file="DiffDescripts.csv", sep=",", col.names=TRUE, row.names=FALSE)
ggpubr::ggboxplot(Murrar_df, x = "Wave", y = "Diff", color = "COND",xlab = "Study Wave", ylab = "Difference in Attitudes toward Arab and White People", add = "jitter", title = "Difference Scores: Condition within Wave")
ggpubr::ggboxplot(Murrar_df, x = "COND", y = "Diff", color = "Wave", xlab = "Study Condition",
ylab = "Difference in Attitudes toward Arab and White People", add = "jitter", title = "Difference Scores: Wave within Condition")
ggpubr::ggline(Murrar_df, x = "Wave", y = "Diff", color = "COND", xlab = "Study Wave",
ylab = "Difference in Attitudes toward Arab and White People", add = c("mean_se", "dotplot"), title = "Lineplots: Condition within Wave")
#add this for a different color palette:  palette = c("#00AFBB", "#E7B800")
ggpubr::ggline(Murrar_df, x = "COND", y = "Diff", color = "Wave", xlab = "Study Condition",
ylab = "Difference in Attitudes toward Arab and White People", add = c("mean_se", "dotplot"), title = "Lineplots: Wave within Condition")
psych::describeBy(Diff ~ Wave + COND, data = Murrar_df, type = 1, mat=TRUE)
#Note. Recently my students and I have been having intermittent struggles with the describeBy function in the psych package. We have noticed that it is problematic when using .rds files and when using data directly imported from Qualtrics. If you are having similar difficulties, try uploading the .csv file and making the appropriate formatting changes.
Mixed_diff<-aov(Diff~COND*Wave, Murrar_df)
summary(Mixed_diff)
#creates object of residuals
resid_Diff<- residuals(Mixed_diff)
hist(resid_Diff)
qqnorm(resid_Diff)
shapiro.test(resid_Diff)
ggpubr::ggboxplot(Murrar_df, x = "COND", y = "Diff", color = "Wave", xlab = "Study Condition",
ylab = "Difference in Attitudes toward Arab and White People", add = "jitter", title = "Difference Scores: Wave within Condition")
Murrar_df %>%
group_by(Wave, COND) %>%
rstatix::identify_outliers(Diff)
#Murrar_df <- dplyr::filter (Murrar_df, caseID != "144")
Murrar_df %>%
group_by(Wave) %>%
rstatix::levene_test(Diff ~ COND)
rstatix::box_m(Murrar_df[, "Diff", drop = FALSE], Murrar_df$COND)
#?anova_test
#Murrar_df is our df, Diff is our df, wid is the caseID
#between is the between-subjects variable, within is the within subjects variable
Diff_2way <- rstatix::anova_test(
data = Murrar_df, dv = Diff, wid = caseID,
between = COND, within = Wave, detailed = TRUE
)
Diff_2way
.05/6
SimpleWave <- Murrar_df %>%
group_by(Wave) %>%
rstatix::t_test(Diff ~ COND, detailed=TRUE, p.adjust.method = "bonferroni")%>%
rstatix::add_significance()
#rstatix::adjust_pvalue(method = "bonferroni") #this displays the adjusted Bonferroni values
SimpleWave
SimpleWave_d <- Murrar_df %>%
group_by(Wave) %>%
rstatix::cohens_d(Diff~COND)
SimpleWave_d
#Although we have used this code this before, I respecified the basic figure here.
CNDwiWV <- ggpubr::ggboxplot(Murrar_df, x = "Wave", y = "Diff", color = "COND",xlab = "Study Wave", ylab = "Difference in Attitudes toward Arab and White People", add = "jitter", ylim = c(-100, 100),  title = "Difference Scores: Condition within Wave")
#This updates the SimpleWave object (which holds the t-tests) to include plotting information about the xy positions
SimpleWave <- SimpleWave %>% rstatix::add_xy_position(x = "Wave")
#SimpleWave #unhashtag if you want to see the plotting information
#Now we update the figure to include the significance bars and stars
# label = "p.adj.signif" points to the values in the rstatix output from the pairwise_t_test
#tip.length is the amount of downward pointing on the lines that hold the p-values
#hide.ns=TRUE suppresses a bar over non-significant comparisons
#y.position adjusts the significance bars up and down, I pushed them up
CNDwiWV <- CNDwiWV +
ggpubr::stat_pvalue_manual(SimpleWave, label = "p.signif", tip.length = .02, hide.ns = TRUE, y.position = c(95, 88))
CNDwiWV
SimpleCond <- Murrar_df %>%
group_by(COND) %>%
rstatix::anova_test(dv = Diff, wid = caseID, within = Wave) %>%
rstatix::get_anova_table() %>%
rstatix::adjust_pvalue(method = "none")
SimpleCond
pwcWVwiGP <- Murrar_df %>%
group_by(COND) %>%
rstatix::pairwise_t_test(
Diff ~ Wave, paired = TRUE, detailed = TRUE,
p.adjust.method = "holm"
) #%>%
#select(-df, -statistic, -p) # Remove details
pwcWVwiGP
str(mix_df)
options(scipen=999)#eliminates scientific notation
MADdf <- readRDS("MADdf231001.rds")
MADdf <- subset(MADdf, Wave == 1 | Wave == 2 | Wave == 3)
mx_df <-(dplyr::select (MADdf, Wave, Group, myPropFM_1))
mx_df <- dplyr::rename(mx_df, OwnWearing = myPropFM_1)
mx_df <- na.omit(mx_df)
str(mx_df)
mx_df$Condition <- as.factor(mx_df$Group)
str(mx_df)
library(tidyverse)
mx_df <- mx_df%>%
dplyr::group_by(caseID)%>%
dplyr::filter(n()==3)
348/3
mx_box <- ggpubr::ggboxplot(mx_df, x = "Wave", y = "OwnWearing", color = "Group", palette = "jco", xlab = "Pandemic Waves", ylab = "Proportion of Time Wearing FM", title = "Facemask Wearing as a Function of Waves and Condition", add = "jitter")
mx_box
mx_df <- as.data.frame(mx_df)#my data was not reading as a df so I applied this function
psych::describeBy(OwnWearing ~ Wave + Group, data = mx_df, type = 1, mat = TRUE, digits = 3)
mx_mod <- aov(OwnWearing ~ Wave*Group, mx_df)
summary(mx_mod)
mx_resid <- residuals(mx_mod)
shapiro.test(mx_resid)
hist(mx_resid)
qqnorm(mx_resid)
mx_df%>%
group_by(Wave, Group)%>%
rstatix::identify_outliers(OwnWearing)
library(tidyverse)
mx_df %>%
group_by(Group, Wave)%>%
rstatix::levene_test(OwnWearing)
str(mix_df)
str(mix_df)
str(mx_df)
MADdf <- readRDS("MADdf231001.rds")
MADdf <- subset(MADdf, Wave == 1 | Wave == 2 | Wave == 3)
mx_df <-(dplyr::select (MADdf, Wave, Group, myPropFM_1))
mx_df <- dplyr::rename(mx_df, OwnWearing = myPropFM_1)
mx_df <- dplyr::rename(mx_df, OwnWearing = myPropFM_1)
mx_df <- dplyr::rename(mx_df, OwnWearing = myPropFM_1)
mx_df <- na.omit(mx_df)
str(mx_df)
mx_df$Condition <- as.factor(mx_df$Group)
str(mx_df)
library(tidyverse)
mx_df <- mx_df%>%
dplyr::group_by(caseID)%>%
dplyr::filter(n()==3)
mx_box <- ggpubr::ggboxplot(mx_df, x = "Wave", y = "OwnWearing", color = "Condition", palette = "jco", xlab = "Pandemic Waves", ylab = "Proportion of Time Wearing FM", title = "Facemask Wearing as a Function of Waves and Condition", add = "jitter")
mx_box
mx_df <- as.data.frame(mx_df)#my data was not reading as a df so I applied this function
psych::describeBy(OwnWearing ~ Wave + Condition, data = mx_df, type = 1, mat = TRUE, digits = 3)
mx_mod <- aov(OwnWearing ~ Wave*Condition, mx_df)
summary(mx_mod)
mx_resid <- residuals(mx_mod)
shapiro.test(mx_resid)
hist(mx_resid)
qqnorm(mx_resid)
mx_df%>%
group_by(Wave, Condition)%>%
rstatix::identify_outliers(OwnWearing)
library(tidyverse)
mx_df %>%
group_by(Condition, Wave)%>%
rstatix::levene_test(OwnWearing)
rstatix::anova_test(data = mx_df, dv = OwnWearing, wid = caseID, between = Condition, within = Wave)
SimpleCond <- mx_df %>%
group_by(Condition) %>%
rstatix::anova_test(dv = OwnWearing, wid = caseID, within = Wave) %>%
rstatix::get_anova_table() %>%
rstatix::adjust_pvalue(method = "none")
SimpleCond
str(mx_df)
pwcWVwiGP <- mx_df %>%
group_by(Condition) %>%
rstatix::pairwise_t_test(
OwnWearing ~ Wave, paired = TRUE, detailed = TRUE,
p.adjust.method = "holm"
) #%>%
View(mx_df)
View(mx_df)
options(scipen=999)#eliminates scientific notation
MADdf <- readRDS("MADdf231001.rds")
MADdf <- subset(MADdf, Wave == 1 | Wave == 2 | Wave == 3)
mx_df <-(dplyr::select (MADdf, Wave, Group, myPropFM_1))
mx_df <- dplyr::rename(mx_df, OwnWearing = myPropFM_1)
mx_df <- na.omit(mx_df)
str(mx_df)
#make caseID a factor
mx_df[,'caseID'] <- as.factor(mx_df[,'caseID'])
mx_df <- as.data.frame(mx_df
mx_df <- as.data.frame(mx_df
mx_df <- as.data.frame(mx_df)
#make caseID a factor
mx_df[,'caseID'] <- as.factor(mx_df[,'caseID'])
#make Wave an ordered factor
mx_df$Wave <- factor(mx_df$Wave, levels = c("2", "3", "4"))
#make COND an ordered factor
mx_df$COND <- factor(mx_df$Group, levels = c("Goodbye", "Information"))
library(tidyverse)
mx_df <- mx_df%>%
dplyr::group_by(caseID)%>%
dplyr::filter(n()==3)
348/3
mx_box <- ggpubr::ggboxplot(mx_df, x = "Wave", y = "OwnWearing", color = "COND", palette = "jco", xlab = "Pandemic Waves", ylab = "Proportion of Time Wearing FM", title = "Facemask Wearing as a Function of Waves and Condition", add = "jitter")
mx_box
mx_df <- as.data.frame(mx_df)#my data was not reading as a df so I applied this function
psych::describeBy(OwnWearing ~ Wave + COND, data = mx_df, type = 1, mat = TRUE, digits = 3)
mx_mod <- aov(OwnWearing ~ Wave*COND, mx_df)
summary(mx_mod)
mx_resid <- residuals(mx_mod)
shapiro.test(mx_resid)
hist(mx_resid)
qqnorm(mx_resid)
mx_df%>%
group_by(Wave, COND)%>%
rstatix::identify_outlConditioniers(OwnWearing)
mx_df%>%
group_by(Wave, COND)%>%
rstatix::identify_outliers(OwnWearing)
library(tidyverse)
mx_df %>%
group_by(COND, Wave)%>%
rstatix::levene_test(OwnWearing)
library(tidyverse)
mx_df %>% mx_df
library(tidyverse)
mx_df %>%
group_by(COND, Wave)%>%
rstatix::levene_test(OwnWearing)
library(tidyverse)
mx_df %>%
group_by(COND, Wave)%>%
rstatix::levene_test(OwnWearing)
rstatix::anova_test(data = mx_df, dv = OwnWearing, wid = caseID, between = COND, within = Wave)
SimpleCond <- mx_df %>%
group_by(COND) %>%
rstatix::anova_test(dv = OwnWearing, wid = caseID, within = Wave) %>%
rstatix::get_anova_table() %>%
rstatix::adjust_pvalue(method = "none")
SimpleCond
pwcWVwiGP <- mx_df %>%
group_by(COND) %>%
rstatix::pairwise_t_test(
OwnWearing ~ Wave, paired = TRUE, detailed = TRUE,
p.adjust.method = "holm"
) #%>%
str(mx_df)
View(mx_mod)
View(mx_df)
MADdf <- readRDS("MADdf231001.rds")
MADdf <- subset(MADdf, Wave == 1 | Wave == 2 | Wave == 3)
View(mx_df)
MADdf <- readRDS("MADdf231001.rds")
MADdf <- subset(MADdf, Wave == 1 | Wave == 2 | Wave == 3)
mx_df <-(dplyr::select (MADdf, Wave, Group, myPropFM_1))
mx_df <- dplyr::rename(mx_df, OwnWearing = myPropFM_1)
mx_df <- na.omit(mx_df)
View(mx_df)
str(mx_df)
mx_df <- as.data.frame(mx_df)
#make caseID a factor
mx_df[,'caseID'] <- as.factor(mx_df[,'caseID'])
#make Wave an ordered factor
mx_df$Wave <- as.factor(mx_df$Wave)
#make COND an ordered factor
mx_df$COND <- factor(mx_df$Group, levels = c("Goodbye", "Information"))
library(tidyverse)
mx_df <- mx_df%>%
dplyr::group_by(caseID)%>%
dplyr::filter(n()==3)
348/3
mx_box <- ggpubr::ggboxplot(mx_df, x = "Wave", y = "OwnWearing", color = "COND", palette = "jco", xlab = "Pandemic Waves", ylab = "Proportion of Time Wearing FM", title = "Facemask Wearing as a Function of Waves and Condition", add = "jitter")
mx_box
mx_df <- as.data.frame(mx_df)#my data was not reading as a df so I applied this function
psych::describeBy(OwnWearing ~ Wave + COND, data = mx_df, type = 1, mat = TRUE, digits = 3)
mx_mod <- aov(OwnWearing ~ Wave*COND, mx_df)
summary(mx_mod)
mx_resid <- residuals(mx_mod)
shapiro.test(mx_resid)
hist(mx_resid)
qqnorm(mx_resid)
mx_df%>%
group_by(Wave, COND)%>%
rstatix::identify_outliers(OwnWearing)
library(tidyverse)
mx_df %>%
group_by(COND, Wave)%>%
rstatix::levene_test(OwnWearing)
library(tidyverse)
mx_df %>%
group_by(Wave, COND)%>%
rstatix::levene_test(OwnWearing)
rstatix::anova_test(data = mx_df, dv = OwnWearing, wid = caseID, between = COND, within = Wave)
SimpleCond <- mx_df %>%
group_by(COND) %>%
rstatix::anova_test(dv = OwnWearing, wid = caseID, within = Wave) %>%
rstatix::get_anova_table() %>%
rstatix::adjust_pvalue(method = "none")
SimpleCond
str(mx_df)
pwcWVwiGP <- mx_df %>%
group_by(COND) %>%
rstatix::pairwise_t_test(
OwnWearing ~ Wave, paired = TRUE, detailed = TRUE,
p.adjust.method = "holm"
) #%>%
options(scipen=999)#eliminates scientific notation
MADdf <- readRDS("MADdf231001.rds")
MADdf <- subset(MADdf, Wave == 1 | Wave == 2 | Wave == 3)
mx_df <-(dplyr::select (MADdf, Wave, Group, myPropFM_1))
mx_df <- dplyr::rename(mx_df, OwnWearing = myPropFM_1)
mx_df <- na.omit(mx_df)
str(mx_df)
mx_df <- as.data.frame(mx_df)
#make caseID a factor
mx_df[,'caseID'] <- as.factor(mx_df[,'caseID'])
#make Wave an ordered factor
mx_df$Wave <- as.factor(mx_df$Wave)
#make COND an ordered factor
mx_df$COND <- factor(mx_df$Group, levels = c("Goodbye", "Information"))
library(tidyverse)
mx_df <- mx_df%>%
dplyr::group_by(caseID)%>%
dplyr::filter(n()==3)
348/3
mx_box <- ggpubr::ggboxplot(mx_df, x = "Wave", y = "OwnWearing", color = "COND", palette = "jco", xlab = "Pandemic Waves", ylab = "Proportion of Time Wearing FM", title = "Facemask Wearing as a Function of Waves and Condition", add = "jitter")
mx_box
mx_df <- as.data.frame(mx_df)#my data was not reading as a df so I applied this function
psych::describeBy(OwnWearing ~ Wave + COND, data = mx_df, type = 1, mat = TRUE, digits = 3)
mx_mod <- aov(OwnWearing ~ Wave*COND, mx_df)
summary(mx_mod)
mx_resid <- residuals(mx_mod)
shapiro.test(mx_resid)
hist(mx_resid)
qqnorm(mx_resid)
mx_df%>%
group_by(Wave, COND)%>%
rstatix::identify_outliers(OwnWearing)
library(tidyverse)
mx_df %>%
group_by(Wave, COND)%>%
rstatix::levene_test(OwnWearing)
rstatix::anova_test(data = mx_df, dv = OwnWearing, wid = caseID, between = COND, within = Wave)
SimpleCond <- mx_df %>%
group_by(COND) %>%
rstatix::anova_test(dv = OwnWearing, wid = caseID, within = Wave) %>%
rstatix::get_anova_table() %>%
rstatix::adjust_pvalue(method = "none")
SimpleCond
str(mx_df)
pwcWVwiGP <- mx_df %>%
group_by(COND) %>%
rstatix::pairwise_t_test(
OwnWearing ~ Wave, paired = TRUE, detailed = TRUE,
p.adjust.method = "holm"
) #%>%
View(mx_df)
mx_df <- mx_df[!(mx_df$caseID == "107"),]
mx_box <- ggpubr::ggboxplot(mx_df, x = "Wave", y = "OwnWearing", color = "COND", palette = "jco", xlab = "Pandemic Waves", ylab = "Proportion of Time Wearing FM", title = "Facemask Wearing as a Function of Waves and Condition", add = "jitter")
mx_box
mx_df <- as.data.frame(mx_df)#my data was not reading as a df so I applied this function
psych::describeBy(OwnWearing ~ Wave + COND, data = mx_df, type = 1, mat = TRUE, digits = 3)
mx_mod <- aov(OwnWearing ~ Wave*COND, mx_df)
summary(mx_mod)
mx_resid <- residuals(mx_mod)
shapiro.test(mx_resid)
hist(mx_resid)
qqnorm(mx_resid)
mx_df%>%
group_by(Wave, COND)%>%
rstatix::identify_outliers(OwnWearing)
library(tidyverse)
mx_df %>%
group_by(Wave, COND)%>%
rstatix::levene_test(OwnWearing)
rstatix::anova_test(data = mx_df, dv = OwnWearing, wid = caseID, between = COND, within = Wave)
SimpleCond <- mx_df %>%
group_by(COND) %>%
rstatix::anova_test(dv = OwnWearing, wid = caseID, within = Wave) %>%
rstatix::get_anova_table() %>%
rstatix::adjust_pvalue(method = "none")
SimpleCond
str(mx_df)
pwcWVwiGP <- mx_df %>%
group_by(COND) %>%
rstatix::pairwise_t_test(
OwnWearing ~ Wave, paired = TRUE, detailed = TRUE,
p.adjust.method = "holm"
) #%>%
#select(-df, -statistic, -p) # Remove details
pwcWVwiGP
apaTables::apa.2way.table(iv1=Wave, iv2=COND, dv=OwnWearing, data=mx_df, filename = "Mixed_Table.doc", table.number = 1)
#We ran this before -- grabbing again to make it clear how creating and updating the boxplot works
WVwiCND <- ggpubr::ggboxplot(mx_df, x = "COND", y = "OwnWearing", color = "Wave", xlab = "Study Condition", ylim = c(-100, 100), ylab = "FM Wearing %", add = "jitter", title = "Wearing Facemasks: Wave within Condition")
#WVwiCND
#This updates the pwcWVwiGP object (which holds the t-tests) to include plotting information about the xy positions
pwcWVwiGP <- pwcWVwiGP %>% rstatix::add_xy_position(x = "COND")
#pwcWVwiGP
#Diff_2way was my omnibus ANOVA object
WVwiCND <- WVwiCND +
ggpubr::stat_pvalue_manual(pwcWVwiGP, label = "p.adj.signif", tip.length = .02, hide.ns = TRUE, y.position = c(100))
WVwiCND
#We ran this before -- grabbing again to make it clear how creating and updating the boxplot works
WVwiCND <- ggpubr::ggboxplot(mx_df, x = "COND", y = "OwnWearing", color = "Wave", xlab = "Study Condition", ylim = c(-100, 100), ylab = "FM Wearing %", add = "jitter", title = "Wearing Facemasks: Wave within Condition")
#WVwiCND
#This updates the pwcWVwiGP object (which holds the t-tests) to include plotting information about the xy positions
pwcWVwiGP <- pwcWVwiGP %>% rstatix::add_xy_position(x = "COND")
#pwcWVwiGP
#Diff_2way was my omnibus ANOVA object
WVwiCND <- WVwiCND +
ggpubr::stat_pvalue_manual(pwcWVwiGP, label = "p.adj.signif", tip.length = .02, hide.ns = TRUE, y.position = c(105))
WVwiCND
#We ran this before -- grabbing again to make it clear how creating and updating the boxplot works
WVwiCND <- ggpubr::ggboxplot(mx_df, x = "COND", y = "OwnWearing", color = "Wave", xlab = "Study Condition", ylim = c(-100, 100), ylab = "FM Wearing %", add = "jitter", title = "Wearing Facemasks: Wave within Condition")
#WVwiCND
#This updates the pwcWVwiGP object (which holds the t-tests) to include plotting information about the xy positions
pwcWVwiGP <- pwcWVwiGP %>% rstatix::add_xy_position(x = "COND")
#pwcWVwiGP
#Diff_2way was my omnibus ANOVA object
WVwiCND <- WVwiCND +
ggpubr::stat_pvalue_manual(pwcWVwiGP, label = "p.adj.signif", tip.length = .02, hide.ns = TRUE, y.position = c(107))
WVwiCND
#We ran this before -- grabbing again to make it clear how creating and updating the boxplot works
WVwiCND <- ggpubr::ggboxplot(mx_df, x = "COND", y = "OwnWearing", color = "Wave", xlab = "Study Condition", ylim = c(-100, 100), ylab = "FM Wearing %", add = "jitter", title = "Wearing Facemasks: Wave within Condition")
#WVwiCND
#This updates the pwcWVwiGP object (which holds the t-tests) to include plotting information about the xy positions
pwcWVwiGP <- pwcWVwiGP %>% rstatix::add_xy_position(x = "COND")
#pwcWVwiGP
#Diff_2way was my omnibus ANOVA object
WVwiCND <- WVwiCND +
ggpubr::stat_pvalue_manual(pwcWVwiGP, label = "p.adj.signif", tip.length = .02, hide.ns = TRUE, y.position = c(110))
WVwiCND
#We ran this before -- grabbing again to make it clear how creating and updating the boxplot works
WVwiCND <- ggpubr::ggboxplot(mx_df, x = "COND", y = "OwnWearing", color = "Wave", xlab = "Study Condition", ylim = c(-100, 100), ylab = "FM Wearing %", add = "jitter", title = "Wearing Facemasks: Wave within Condition")
#WVwiCND
#This updates the pwcWVwiGP object (which holds the t-tests) to include plotting information about the xy positions
pwcWVwiGP <- pwcWVwiGP %>% rstatix::add_xy_position(x = "COND")
#pwcWVwiGP
#Diff_2way was my omnibus ANOVA object
WVwiCND <- WVwiCND +
ggpubr::stat_pvalue_manual(pwcWVwiGP, label = "p.adj.signif", tip.length = .02, hide.ns = TRUE, y.position = c(106))
WVwiCND
#We ran this before -- grabbing again to make it clear how creating and updating the boxplot works
WVwiCND <- ggpubr::ggboxplot(mx_df, x = "COND", y = "OwnWearing", color = "Wave", xlab = "Study Condition", ylim = c(0, 100), ylab = "FM Wearing %", add = "jitter", title = "Wearing Facemasks: Wave within Condition")
#WVwiCND
#This updates the pwcWVwiGP object (which holds the t-tests) to include plotting information about the xy positions
pwcWVwiGP <- pwcWVwiGP %>% rstatix::add_xy_position(x = "COND")
#pwcWVwiGP
#Diff_2way was my omnibus ANOVA object
WVwiCND <- WVwiCND +
ggpubr::stat_pvalue_manual(pwcWVwiGP, label = "p.adj.signif", tip.length = .02, hide.ns = TRUE, y.position = c(106))
WVwiCND
#We ran this before -- grabbing again to make it clear how creating and updating the boxplot works
WVwiCND <- ggpubr::ggboxplot(mx_df, x = "COND", y = "OwnWearing", color = "Wave", xlab = "Study Condition", ylim = c(0, 100), ylab = "FM Wearing %", add = "jitter", title = "Wearing Facemasks: Wave within Condition")
#WVwiCND
#This updates the pwcWVwiGP object (which holds the t-tests) to include plotting information about the xy positions
pwcWVwiGP <- pwcWVwiGP %>% rstatix::add_xy_position(x = "COND")
#pwcWVwiGP
#Diff_2way was my omnibus ANOVA object
WVwiCND <- WVwiCND +
ggpubr::stat_pvalue_manual(pwcWVwiGP, label = "p.adj.signif", tip.length = .02, hide.ns = TRUE, y.position = c(103))
WVwiCND
#include effect size from the interaction effect
effectsize::eta2_to_f(0.003)
345/3
WebPower::wp.rmanova(n=115, ng=2, nm=3, f = 0.2014515, nscor = .866, alpha = .05, power = NULL, type = 2)
WebPower::wp.rmanova(n=NULL, ng=2, nm=3, f = 0.003, nscor = .866, alpha = .05, power = .80, type = 2)
