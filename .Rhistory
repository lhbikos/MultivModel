( Gender = runif(n_church*n_mbrs, -1.09, 1.67)) #calc L1 gender
( Age = runif(n_church*n_mbrs, 6.44, 93.93)) #calc L1 age
( Education = runif(n_church*n_mbrs, 0, 8.46)) #calc L1 education
( Attendance = runif(n_church*n_mbrs,5.11, 10.39)) #calc L1 attendance by grabbing  its M +/- 3SD
( Homogeneity = rep (runif(n_church, .37, 1.45), each = n_mbrs)) #calc L2 homogeneity by grabbing  its M +/- 3SD
mu = 3.39
sds = .64 #this is the SD of the DV
sd = 1 #this is the observation-level random effect variance that we set at 1
( church = rep(LETTERS[1:n_church], each = n_mbrs) )
#( mbrs = numbers[1:(n_church*n_mbrs)] )
( churcheff = rnorm(n_church, 0, sds) )
( churcheff = rep(churcheff, each = n_mbrs) )
( mbrseff = rnorm(n_church*n_mbrs, 0, sd) )
( ATSS = b0 + b1*Gender + b2*Age + b3*Education + b4*Attendance + b5*Homogeneity + churcheff + mbrseff)
( dat = data.frame(church, churcheff, mbrseff, Gender, Age, Education, Attendance, Homogeneity, ATSS) )
library(dplyr)
dat <- dat %>% mutate(ID = row_number())
#moving the ID number to the first column; requires
dat <- dat%>%select(ID, everything())
Lefevor2020 <- dat%>%
select(ID, church, Gender, Age, Education, Attendance, Homogeneity, ATSS)
#rounded gender into dichotomous variable
Lefevor2020$Female0 <- round(Lefevor2020$Gender, 0)
Lefevor2020$Female0 <- as.integer(Lefevor2020$Gender)
Lefevor2020$Female0 <- plyr::mapvalues(Lefevor2020$Female0, from = c(-1, 0, 1), to = c(0, 0, 1))
#( dat$ATSS = with(dat, mu + churcheff + mbrseff ) )
write.table(Lefevor2020, file="Lefevor2020.csv", sep=",", col.names=TRUE, row.names=FALSE)
Lefevor2020 <- read.csv ("Lefevor2020.csv", head = TRUE, sep = ",")
library(psych)
psych::pairs.panels(Lefevor2020[c("ATSS", "Attendance", "Homogeneity")], stars = TRUE)
psych::describe(Lefevor2020[c("ATSS", "Attendance", "Homogeneity")])
options(scipen=999)#eliminates scientific notation
#removing hashtags will check to see if the package is installed and if not, will install it
#if(!require(lme4)){install.packages("lme4")}
#if(!require(nlme)){install.packages("nlme")}
#if(!require(sjstats)){install.packages("sjstats")}
#if(!require(tidyverse)){install.packages("tidyverse")}
#if(!require(psych)){install.packages("psych")}
#if(!require(lmerTest)){install.packages("lmerTest")}
#if(!require(robumeta)){install.packages("robumeta")}
#if(!require(sjstats)){install.packages("sjstats")}
#if(!require(PerformanceAnalytics)){install.packages("PerformanceAnalytics")}
#Hidden from the HTML presentation of the OER, this is the calculation of the range of the variables used in the simulation.
# Range of gender
.29 - (.46*3)
.29 + (.46*3)
#Range of age
50.13 - (14.6*3)
50.13 + (14.6*3)
#Range of education
3.96 - (1.5*3)
3.96 + (1.5*3)
# Range of religious attendance (M +/- [3*SD])
7.75 - (.88*3)
7.75 + (.88*3)
# Range of racial homogeneity (M +/- [3*SD])
.91 - (.18*3)
.91 + (.18*3)
set.seed(200407)
n_church = 15
n_mbrs = 15
b0 = 3.43 #intercept for ATSS
b1 = .14 #b weight for L1 var gender
b2 = .00 #b weight or L1 var age
b3 = .02 #b weight for L1 var education
b4 = .10 #b weight for the L1 variable religious attendance
b5 = -.89 #b weight for the L2 variable, racial homogeneity
( Gender = runif(n_church*n_mbrs, -1.09, 1.67)) #calc L1 gender
( Age = runif(n_church*n_mbrs, 6.44, 93.93)) #calc L1 age
( Education = runif(n_church*n_mbrs, 0, 8.46)) #calc L1 education
( Attendance = runif(n_church*n_mbrs,5.11, 10.39)) #calc L1 attendance by grabbing  its M +/- 3SD
( Homogeneity = rep (runif(n_church, .37, 1.45), each = n_mbrs)) #calc L2 homogeneity by grabbing  its M +/- 3SD
mu = 3.39
sds = .64 #this is the SD of the DV
sd = 1 #this is the observation-level random effect variance that we set at 1
( church = rep(LETTERS[1:n_church], each = n_mbrs) )
#( mbrs = numbers[1:(n_church*n_mbrs)] )
( churcheff = rnorm(n_church, 0, sds) )
( churcheff = rep(churcheff, each = n_mbrs) )
( mbrseff = rnorm(n_church*n_mbrs, 0, sd) )
( ATSS = b0 + b1*Gender + b2*Age + b3*Education + b4*Attendance + b5*Homogeneity + churcheff + mbrseff)
( dat = data.frame(church, churcheff, mbrseff, Gender, Age, Education, Attendance, Homogeneity, ATSS) )
library(dplyr)
dat <- dat %>% mutate(ID = row_number())
#moving the ID number to the first column; requires
dat <- dat%>%select(ID, everything())
Lefevor2020 <- dat%>%
select(ID, church, Gender, Age, Education, Attendance, Homogeneity, ATSS)
#rounded gender into dichotomous variable
Lefevor2020$Female0 <- round(Lefevor2020$Gender, 0)
Lefevor2020$Female0 <- as.integer(Lefevor2020$Gender)
Lefevor2020$Female0 <- plyr::mapvalues(Lefevor2020$Female0, from = c(-1, 0, 1), to = c(0, 0, 1))
#( dat$ATSS = with(dat, mu + churcheff + mbrseff ) )
write.table(Lefevor2020, file="Lefevor2020.csv", sep=",", col.names=TRUE, row.names=FALSE)
Lefevor2020 <- read.csv ("Lefevor2020.csv", head = TRUE, sep = ",")
library(psych)
psych::pairs.panels(Lefevor2020[c("ATSS", "Attendance", "Homogeneity")], stars = TRUE)
psych::describe(Lefevor2020[c("ATSS", "Attendance", "Homogeneity")])
misty::multilevel.descript(Lefevor2020[, c("ATSS", "Attendance", "Homogeneity")],
cluster = Lefevor2020$church)
corrmatrix <- misty::multilevel.cor(Lefevor2020[, c("ATSS", "Attendance", "Homogeneity")],
cluster = Lefevor2020$church, split=FALSE, output = TRUE, write = "MLMcorr.xlsx",                      print = c("cor", "p"), digits = 3, missing = "listwise")
View(Lefevor2020)
corrmatrix <- misty::multilevel.cor(Lefevor2020[, c("ATSS", "Attendance", "Homogeneity")],
cluster = Lefevor2020$church, split=FALSE, output = TRUE, write = "MLMcorr.xlsx",                      print = c("cor", "p"), digits = 3, missing = "listwise")
corrmatrix <- misty::multilevel.cor(Lefevor2020[, c("ATSS", "Attendance", "Homogeneity")],
cluster = Lefevor2020$church, split=FALSE, output = TRUE, write = "MLMcorr.xlsx",                      print = c("cor", "p"), digits = 3)
corrmatrix <- misty::multilevel.cor(Lefevor2020[, c("ATSS", "Attendance", "Homogeneity")],
cluster = Lefevor2020$church, split=FALSE, output = TRUE, write = "MLMcorr.xlsx",                      print = c("cor", "p"), digits = 3, missing = "fiml")
corrmatrix <- misty::multilevel.cor(Lefevor2020[, c("ATSS", "Attendance", "Homogeneity")],
cluster = Lefevor2020$church, split=FALSE, output = TRUE, write = "MLMcorr.xlsx",                      print = c("cor", "p"), digits = 3, missing = "listwise", optim.method = c("nlminb"))
corrmatrix <- misty::multilevel.cor(Lefevor2020[, c("ATSS", "Attendance", "Homogeneity")],
cluster = Lefevor2020$church, split=FALSE, output = TRUE, write = "MLMcorr.xlsx",                      print = c("cor", "p"), digits = 3, missing = "listwise", optim.method = c("em"))
options(scipen=999)#eliminates scientific notation
#removing hashtags will check to see if the package is installed and if not, will install it
#if(!require(lme4)){install.packages("lme4")}
#if(!require(nlme)){install.packages("nlme")}
#if(!require(sjstats)){install.packages("sjstats")}
#if(!require(tidyverse)){install.packages("tidyverse")}
#if(!require(psych)){install.packages("psych")}
#if(!require(lmerTest)){install.packages("lmerTest")}
#if(!require(robumeta)){install.packages("robumeta")}
#if(!require(sjstats)){install.packages("sjstats")}
#if(!require(PerformanceAnalytics)){install.packages("PerformanceAnalytics")}
#Hidden from the HTML presentation of the OER, this is the calculation of the range of the variables used in the simulation.
# Range of gender
.29 - (.46*3)
.29 + (.46*3)
#Range of age
50.13 - (14.6*3)
50.13 + (14.6*3)
#Range of education
3.96 - (1.5*3)
3.96 + (1.5*3)
# Range of religious attendance (M +/- [3*SD])
7.75 - (.88*3)
7.75 + (.88*3)
# Range of racial homogeneity (M +/- [3*SD])
.91 - (.18*3)
.91 + (.18*3)
set.seed(200407)
n_church = 15
n_mbrs = 15
b0 = 3.43 #intercept for ATSS
b1 = .14 #b weight for L1 var gender
b2 = .00 #b weight or L1 var age
b3 = .02 #b weight for L1 var education
b4 = .10 #b weight for the L1 variable religious attendance
b5 = -.89 #b weight for the L2 variable, racial homogeneity
( Gender = runif(n_church*n_mbrs, -1.09, 1.67)) #calc L1 gender
( Age = runif(n_church*n_mbrs, 6.44, 93.93)) #calc L1 age
( Education = runif(n_church*n_mbrs, 0, 8.46)) #calc L1 education
( Attendance = runif(n_church*n_mbrs,5.11, 10.39)) #calc L1 attendance by grabbing  its M +/- 3SD
( Homogeneity = rep (runif(n_church, .37, 1.45), each = n_mbrs)) #calc L2 homogeneity by grabbing  its M +/- 3SD
mu = 3.39
sds = .64 #this is the SD of the DV
sd = 1 #this is the observation-level random effect variance that we set at 1
( church = rep(LETTERS[1:n_church], each = n_mbrs) )
#( mbrs = numbers[1:(n_church*n_mbrs)] )
( churcheff = rnorm(n_church, 0, sds) )
( churcheff = rep(churcheff, each = n_mbrs) )
( mbrseff = rnorm(n_church*n_mbrs, 0, sd) )
( ATSS = b0 + b1*Gender + b2*Age + b3*Education + b4*Attendance + b5*Homogeneity + churcheff + mbrseff)
( dat = data.frame(church, churcheff, mbrseff, Gender, Age, Education, Attendance, Homogeneity, ATSS) )
library(dplyr)
dat <- dat %>% mutate(ID = row_number())
#moving the ID number to the first column; requires
dat <- dat%>%select(ID, everything())
Lefevor2020 <- dat%>%
select(ID, church, Gender, Age, Education, Attendance, Homogeneity, ATSS)
#rounded gender into dichotomous variable
Lefevor2020$Female0 <- round(Lefevor2020$Gender, 0)
Lefevor2020$Female0 <- as.integer(Lefevor2020$Gender)
Lefevor2020$Female0 <- plyr::mapvalues(Lefevor2020$Female0, from = c(-1, 0, 1), to = c(0, 0, 1))
#( dat$ATSS = with(dat, mu + churcheff + mbrseff ) )
write.table(Lefevor2020, file="Lefevor2020.csv", sep=",", col.names=TRUE, row.names=FALSE)
Lefevor2020 <- read.csv ("Lefevor2020.csv", head = TRUE, sep = ",")
library(psych)
psych::pairs.panels(Lefevor2020[c("ATSS", "Attendance", "Homogeneity")], stars = TRUE)
psych::describe(Lefevor2020[c("ATSS", "Attendance", "Homogeneity")])
misty::multilevel.descript(Lefevor2020[, c("ATSS", "Attendance", "Homogeneity")],
cluster = Lefevor2020$church)
#corrmatrix <- misty::multilevel.cor(Lefevor2020[, c("ATSS", "Attendance", "Homogeneity")],
#cluster = Lefevor2020$church, split=FALSE, output = TRUE, write = "MLMcorr.xlsx",                      #print = c("cor", "p"), digits = 3, missing = "listwise")
#corrmatrix
head(Lefevor2020[c("church", "ATSS", "Attendance", "Homogeneity")], n = 30L)
library(robumeta)
Lefevor2020$AttendL1 <- as.numeric(group.center(Lefevor2020$Attendance, Lefevor2020$church))#centered within context (group mean centering)
Lefevor2020$AttendL2 <- as.numeric(group.mean(Lefevor2020$Attendance, Lefevor2020$church))#aggregated at group mean
head(Lefevor2020[c("church", "ATSS", "Attendance", "AttendL1", "AttendL2", "Homogeneity")], n = 30L)
psych::describe(Lefevor2020[c("ATSS", "Attendance", "AttendL1", "AttendL2", "Homogeneity")])
psych::describeBy(ATSS + Attendance + AttendL1 + AttendL2 + Homogeneity ~ church, data = Lefevor2020)
#Multilevel level correlation matrix
apaTables::apa.cor.table(Lefevor2020[c(
"ATSS", "Attendance", "AttendL1", "AttendL2", "Homogeneity")], show.conf.interval = FALSE, landscape = TRUE, table.number = 1, filename="ML_CorMatrix.doc")
library(lme4)
Mod1 <- lmer(ATSS ~1 + (1 | church), REML = FALSE, data = Lefevor2020)
summary(Mod1)
AIC(Mod1) # request AIC
BIC(Mod1) # request BIC
library(nlme)
ModB1 <- lme(ATSS ~ 1, random = ~ 1|church, method="ML", na.action = na.omit, data = Lefevor2020)
summary(ModB1)
anova(ModB1) # request F-tests for fixed effects
library(lmerTest)
ranova(Mod1) # request test of random effects
confint(Mod1) # request test of random effects (variance displayed as SD)
# Extract Variances to compute R^2
var_table = as.data.frame(VarCorr(Mod1))
Mod1_var_tot = var_table[1,'vcov'] + var_table[2,'vcov'] # var_table[1,'vcov'] = L1 var; var_table[2,'vcov'] = L2 var;
library(sjPlot)
tab_model(Mod1, ModB1, p.style = "numeric", show.ci = FALSE, show.se = TRUE, show.df = FALSE, show.re.var = TRUE, show.aic = TRUE, show.dev = TRUE, use.viewer = TRUE, dv.labels = c("Mod1", "ModB1"))
#can swap this statement with the "file = "TabMod_Table"" to get Viewer output or the outfile that you can open in Word
#file = "TabMod_Table.doc"
library(sjPlot)
sjPlot::plot_model (Mod1, type="re")
.27/(1.13+.27)
1.00 - .19
# MODEL 2
Mod2 <- lmer(ATSS ~ AttendL1 + (1 | church), REML=FALSE, data = Lefevor2020)
summary(Mod2)
AIC(Mod2) # request AIC
BIC(Mod2) # request BIC
ModB2 <- lme(ATSS ~  AttendL1, random = ~ 1|church, method="ML", na.action = na.omit, data =Lefevor2020)
summary(ModB2)
anova(Mod2) # request F-tests for fixed effects
ranova(Mod2) # request test of random effects
confint(Mod2) # request test of random effects (variance displayed as SD)
DevM2 <- anova(Mod1, Mod2)
# Extract Variances to compute R^2
var_table = as.data.frame(VarCorr(Mod2))
Mod2_var_tot = var_table[1,'vcov'] + var_table[2,'vcov'] # var_table[1,'vcov'] = L1 var; var_table[2,'vcov'] = L2 var;
tab_model(Mod1, Mod2, p.style = "numeric", show.ci = FALSE, show.df = FALSE, show.re.var = TRUE, show.aic = TRUE, show.dev = TRUE, use.viewer = TRUE, dv.labels = c("Mod1", "Mod2"), string.est = "est", string.se = "se", string.std = "Beta", string.std_se = "std se", string.p = "p", show.std = TRUE)
#can swap this statement with the "file = "TabMod_Table"" to get Viewer output or the outfile that you can open in Word
#file = "TabMod_Table.doc"
options(scipen=999)
raw <- readRDS("ReC.rds")
#raw <-(dplyr::filter(raw, Course == "ANOVA"))
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
raw$TradPed <- sjstats::mean_n(raw[, ..TradPed_vars], .75)
options(scipen=999)
raw <- readRDS("ReC.rds")
#raw <-(dplyr::filter(raw, Course == "ANOVA"))
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
raw$TradPed <- sjstats::mean_n(raw[, ..TradPed_vars], .75)
options(scipen=999)
raw <- readRDS("ReC.rds")
#raw <-(dplyr::filter(raw, Course == "ANOVA"))
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
raw$TradPed <- sjstats::mean_n(raw[, ..TradPed_vars], .75)
CrossLevel <- lme4::lmer(SRPed ~ TrPL1*StatsPkg + TrPL1*Centering + TrPL2*StatsPkg + TrPL2*Centering + (1 | CourseID), babydf, REML = FALSE)
options(scipen=999)
raw <- readRDS("ReC.rds")
#raw <-(dplyr::filter(raw, Course == "ANOVA"))
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
raw$TradPed <- sjstats::mean_n(raw[, ..TradPed_vars], .75)
options(scipen=999)
raw <- readRDS("ReC.rds")
#raw <-(dplyr::filter(raw, Course == "ANOVA"))
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
raw$TradPed <- sjstats::mean_n(raw[, ..TradPed_vars], .75)
options(scipen=999)
raw <- readRDS("ReC.rds")
#raw <-(dplyr::filter(raw, Course == "ANOVA"))
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
raw$TradPed <- sjstats::mean_n(raw[, TradPed_vars], .75)
Valued_vars <- c('ValObjectives', 'IncrUnderstanding','IncrInterest')
raw$Valued <- sjstats::mean_n(raw[, Valued_vars], .75)
SRPed_vars <- c('InclusvClassrm','EquitableEval', 'MultPerspectives', 'DEIintegration')
raw$SRPed <- sjstats::mean_n(raw[, SRPed_vars], .75)
#If the scoring code above does not work for you, try the format below which involves inserting to periods in front of the variable list. One example is provided.
#raw$TradPed <- sjstats::mean_n(raw[, ..TradPed_vars], .75))
options(scipen=999)
raw <- readRDS("ReC.rds")
#raw <-(dplyr::filter(raw, Course == "ANOVA"))
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
raw$TradPed <- sjstats::mean_n(raw[, TradPed_vars], .75)
Valued_vars <- c('ValObjectives', 'IncrUnderstanding','IncrInterest')
raw$Valued <- sjstats::mean_n(raw[, Valued_vars], .75)
SRPed_vars <- c('InclusvClassrm','EquitableEval', 'MultPerspectives', 'DEIintegration')
raw$SRPed <- sjstats::mean_n(raw[, SRPed_vars], .75)
#If the scoring code above does not work for you, try the format below which involves inserting to periods in front of the variable list. One example is provided.
#raw$TradPed <- sjstats::mean_n(raw[, ..TradPed_vars], .75))
babydf <- dplyr::select(raw, CourseID, Centering, StatsPkg, TradPed, SRPed)
babydf$CEN <- as.numeric(babydf$Centering)
babydf$CEN <- (babydf$CEN - 1)
str(babydf)
babydf$SPkg <- as.numeric(babydf$StatsPkg)
babydf$SPkg <- (babydf$SPkg - 1)
str(babydf)
misty::multilevel.descript(babydf[, c("CEN", "SPkg", "TradPed", "SRPed")],
cluster = babydf$CourseID)
corrmatrix <- misty::multilevel.cor(babydf[, c("TradPed", "SRPed")],
cluster = babydf$CourseID, split=FALSE, output = TRUE, write = "MLMcorr.xlsx",                      print = c("cor", "p"), digits = 3, missing = "listwise")
corrmatrix
library(robumeta)
babydf$TrPL1 <- as.numeric(group.center(babydf$TradPed, babydf$CourseID))#centered within context (group mean centering)
babydf$TrPL2 <- as.numeric(group.mean(babydf$TradPed, babydf$CourseID))#aggregated at group mean
empty <- lme4::lmer(SRPed ~1 +(1 | CourseID), babydf, REML = FALSE)
sjPlot::tab_model(empty, p.style = "numeric", show.ci = FALSE, show.se = TRUE, show.df = FALSE, show.re.var = TRUE, show.aic = TRUE, show.dev = TRUE, use.viewer = TRUE, dv.labels = c("Empty"), string.est = "est", string.se = "se", string.std = "Beta", string.std_se = "std se", string.p = "p", show.std = TRUE)
Level1 <- lme4::lmer(SRPed ~ TrPL1 +  (1 | CourseID), babydf, REML = FALSE)
sjPlot::tab_model(empty, Level1, p.style = "numeric", show.ci = FALSE, show.se = TRUE, show.df = FALSE, show.re.var = TRUE, show.aic = TRUE, show.dev = TRUE, use.viewer = TRUE, dv.labels = c("Empty", "Level1"), string.est = "est", string.se = "se", string.std = "Beta", string.std_se = "std se", string.p = "p", show.std = TRUE)
Level2 <- lme4::lmer(SRPed ~ TrPL1 + TrPL2 + StatsPkg + Centering +(1 | CourseID), babydf, REML = FALSE)
sjPlot::tab_model(empty, Level1, Level2, p.style = "numeric", show.ci = FALSE, show.se = TRUE, show.df = FALSE, show.re.var = TRUE, show.aic = TRUE, show.dev = TRUE, use.viewer = TRUE, dv.labels = c("Empty", "Level1", "Level2"), string.est = "est", string.se = "se", string.std = "Beta", string.std_se = "std se", string.p = "p", show.std = TRUE)
CrossLevel <- lme4::lmer(SRPed ~ TrPL1*StatsPkg + TrPL1*Centering + TrPL2*StatsPkg + TrPL2*Centering + (1 | CourseID), babydf, REML = FALSE)
sjPlot::tab_model(empty, Level1, Level2, CrossLevel, p.style = "numeric", show.ci = FALSE, show.se = TRUE, show.df = FALSE, show.re.var = TRUE, show.aic = TRUE, show.dev = TRUE, use.viewer = TRUE, dv.labels = c("Empty", "Level1", "Level2", "CrossLevel"), string.est = "est", string.se = "se", string.std = "Beta", string.std_se = "std se", string.p = "p", show.std = TRUE)
sjPlot::plot_model(CrossLevel, type = "pred", axis.lim = c(1, 5), show.data = TRUE, terms =c("TrPL1", "StatsPkg"))
sjPlot::plot_model(CrossLevel, type = "pred", axis.lim = c(1, 5), terms =c("TrPL1", "StatsPkg", "TrPL2"))
sjPlot::plot_model(CrossLevel, type = "pred", axis.lim = c(1, 5), show.data = TRUE, terms =c("TrPL1", "Centering"))
sjPlot::plot_model(CrossLevel, type = "pred", axis.lim = c(1, 5), terms =c("TrPL1", "Centering", "TrPL2"))
options(scipen=999)#eliminates scientific notation
#removing hashtags will check to see if the package is installed and if not, will install it
#if(!require(lme4)){install.packages("lme4")}
#if(!require(nlme)){install.packages("nlme")}
#if(!require(sjstats)){install.packages("sjstats")}
#if(!require(tidyverse)){install.packages("tidyverse")}
#if(!require(psych)){install.packages("psych")}
#if(!require(lmerTest)){install.packages("lmerTest")}
#if(!require(robumeta)){install.packages("robumeta")}
#if(!require(sjstats)){install.packages("sjstats")}
#if(!require(PerformanceAnalytics)){install.packages("PerformanceAnalytics")}
#Hidden from the HTML presentation of the OER, this is the calculation of the range of the variables used in the simulation.
# Range of gender
.29 - (.46*3)
.29 + (.46*3)
#Range of age
50.13 - (14.6*3)
50.13 + (14.6*3)
#Range of education
3.96 - (1.5*3)
3.96 + (1.5*3)
# Range of religious attendance (M +/- [3*SD])
7.75 - (.88*3)
7.75 + (.88*3)
# Range of racial homogeneity (M +/- [3*SD])
.91 - (.18*3)
.91 + (.18*3)
set.seed(200407)
n_church = 15
n_mbrs = 15
b0 = 3.43 #intercept for ATSS
b1 = .14 #b weight for L1 var gender
b2 = .00 #b weight or L1 var age
b3 = .02 #b weight for L1 var education
b4 = .10 #b weight for the L1 variable religious attendance
b5 = -.89 #b weight for the L2 variable, racial homogeneity
( Gender = runif(n_church*n_mbrs, -1.09, 1.67)) #calc L1 gender
( Age = runif(n_church*n_mbrs, 6.44, 93.93)) #calc L1 age
( Education = runif(n_church*n_mbrs, 0, 8.46)) #calc L1 education
( Attendance = runif(n_church*n_mbrs,5.11, 10.39)) #calc L1 attendance by grabbing  its M +/- 3SD
( Homogeneity = rep (runif(n_church, .37, 1.45), each = n_mbrs)) #calc L2 homogeneity by grabbing  its M +/- 3SD
mu = 3.39
sds = .64 #this is the SD of the DV
sd = 1 #this is the observation-level random effect variance that we set at 1
( church = rep(LETTERS[1:n_church], each = n_mbrs) )
#( mbrs = numbers[1:(n_church*n_mbrs)] )
( churcheff = rnorm(n_church, 0, sds) )
( churcheff = rep(churcheff, each = n_mbrs) )
( mbrseff = rnorm(n_church*n_mbrs, 0, sd) )
( ATSS = b0 + b1*Gender + b2*Age + b3*Education + b4*Attendance + b5*Homogeneity + churcheff + mbrseff)
( dat = data.frame(church, churcheff, mbrseff, Gender, Age, Education, Attendance, Homogeneity, ATSS) )
library(dplyr)
dat <- dat %>% mutate(ID = row_number())
#moving the ID number to the first column; requires
dat <- dat%>%select(ID, everything())
Lefevor2020 <- dat%>%
select(ID, church, Gender, Age, Education, Attendance, Homogeneity, ATSS)
#rounded gender into dichotomous variable
Lefevor2020$Female0 <- round(Lefevor2020$Gender, 0)
Lefevor2020$Female0 <- as.integer(Lefevor2020$Gender)
Lefevor2020$Female0 <- plyr::mapvalues(Lefevor2020$Female0, from = c(-1, 0, 1), to = c(0, 0, 1))
#( dat$ATSS = with(dat, mu + churcheff + mbrseff ) )
write.table(Lefevor2020, file="Lefevor2020.csv", sep=",", col.names=TRUE, row.names=FALSE)
Lefevor2020 <- read.csv ("Lefevor2020.csv", head = TRUE, sep = ",")
library(psych)
psych::pairs.panels(Lefevor2020[c("ATSS", "Attendance", "Homogeneity")], stars = TRUE)
psych::describe(Lefevor2020[c("ATSS", "Attendance", "Homogeneity")])
misty::multilevel.descript(Lefevor2020[, c("ATSS", "Attendance", "Homogeneity")],
cluster = Lefevor2020$church)
#corrmatrix <- misty::multilevel.cor(Lefevor2020[, c("ATSS", "Attendance", "Homogeneity")],
#cluster = Lefevor2020$church, split=FALSE, output = TRUE, write = "MLMcorr.xlsx",                      #print = c("cor", "p"), digits = 3, missing = "listwise")
#corrmatrix
head(Lefevor2020[c("church", "ATSS", "Attendance", "Homogeneity")], n = 30L)
library(robumeta)
Lefevor2020$AttendL1 <- as.numeric(group.center(Lefevor2020$Attendance, Lefevor2020$church))#centered within context (group mean centering)
Lefevor2020$AttendL2 <- as.numeric(group.mean(Lefevor2020$Attendance, Lefevor2020$church))#aggregated at group mean
head(Lefevor2020[c("church", "ATSS", "Attendance", "AttendL1", "AttendL2", "Homogeneity")], n = 30L)
psych::describe(Lefevor2020[c("ATSS", "Attendance", "AttendL1", "AttendL2", "Homogeneity")])
psych::describeBy(ATSS + Attendance + AttendL1 + AttendL2 + Homogeneity ~ church, data = Lefevor2020)
#Multilevel level correlation matrix
apaTables::apa.cor.table(Lefevor2020[c(
"ATSS", "Attendance", "AttendL1", "AttendL2", "Homogeneity")], show.conf.interval = FALSE, landscape = TRUE, table.number = 1, filename="ML_CorMatrix.doc")
library(lme4)
Mod1 <- lmer(ATSS ~1 + (1 | church), REML = FALSE, data = Lefevor2020)
summary(Mod1)
AIC(Mod1) # request AIC
BIC(Mod1) # request BIC
library(nlme)
ModB1 <- lme(ATSS ~ 1, random = ~ 1|church, method="ML", na.action = na.omit, data = Lefevor2020)
summary(ModB1)
anova(ModB1) # request F-tests for fixed effects
library(lmerTest)
ranova(Mod1) # request test of random effects
confint(Mod1) # request test of random effects (variance displayed as SD)
# Extract Variances to compute R^2
var_table = as.data.frame(VarCorr(Mod1))
Mod1_var_tot = var_table[1,'vcov'] + var_table[2,'vcov'] # var_table[1,'vcov'] = L1 var; var_table[2,'vcov'] = L2 var;
library(sjPlot)
tab_model(Mod1, ModB1, p.style = "numeric", show.ci = FALSE, show.se = TRUE, show.df = FALSE, show.re.var = TRUE, show.aic = TRUE, show.dev = TRUE, use.viewer = TRUE, dv.labels = c("Mod1", "ModB1"))
#can swap this statement with the "file = "TabMod_Table"" to get Viewer output or the outfile that you can open in Word
#file = "TabMod_Table.doc"
library(lme4)
Mod1 <- lme4::lmer(ATSS ~1 + (1 | church), REML = FALSE, data = Lefevor2020)
summary(Mod1)
AIC(Mod1) # request AIC
BIC(Mod1) # request BIC
library(nlme)
ModB1 <- lme(ATSS ~ 1, random = ~ 1|church, method="ML", na.action = na.omit, data = Lefevor2020)
summary(ModB1)
anova(ModB1) # request F-tests for fixed effects
library(lmerTest)
ranova(Mod1) # request test of random effects
confint(Mod1) # request test of random effects (variance displayed as SD)
# Extract Variances to compute R^2
var_table = as.data.frame(VarCorr(Mod1))
Mod1_var_tot = var_table[1,'vcov'] + var_table[2,'vcov'] # var_table[1,'vcov'] = L1 var; var_table[2,'vcov'] = L2 var;
sjPlot::tab_model(Mod1, ModB1, p.style = "numeric", show.ci = FALSE, show.se = TRUE, show.df = FALSE, show.re.var = TRUE, show.aic = TRUE, show.dev = TRUE, use.viewer = TRUE, dv.labels = c("Mod1", "ModB1"), string.est = "est", string.se = "se", string.std = "Beta", string.std_se = "std se", string.p = "p", show.std = TRUE)
#can swap this statement with the "file = "TabMod_Table"" to get Viewer output or the outfile that you can open in Word
#file = "TabMod_Table.doc"
# MODEL 2
Mod2 <- lmer(ATSS ~ AttendL1 + (1 | church), REML=FALSE, data = Lefevor2020)
summary(Mod2)
AIC(Mod2) # request AIC
BIC(Mod2) # request BIC
ModB2 <- lme(ATSS ~  AttendL1, random = ~ 1|church, method="ML", na.action = na.omit, data =Lefevor2020)
summary(ModB2)
anova(Mod2) # request F-tests for fixed effects
ranova(Mod2) # request test of random effects
confint(Mod2) # request test of random effects (variance displayed as SD)
DevM2 <- anova(Mod1, Mod2)
# Extract Variances to compute R^2
var_table = as.data.frame(VarCorr(Mod2))
Mod2_var_tot = var_table[1,'vcov'] + var_table[2,'vcov'] # var_table[1,'vcov'] = L1 var; var_table[2,'vcov'] = L2 var;
tab_model(Mod1, Mod2, p.style = "numeric", show.ci = FALSE, show.df = FALSE, show.re.var = TRUE, show.aic = TRUE, show.dev = TRUE, use.viewer = TRUE, dv.labels = c("Mod1", "Mod2"), string.est = "est", string.se = "se", string.std = "Beta", string.std_se = "std se", string.p = "p", show.std = TRUE)
#can swap this statement with the "file = "TabMod_Table"" to get Viewer output or the outfile that you can open in Word
#file = "TabMod_Table.doc"
# MODEL 2
Mod2 <- lmer(ATSS ~ AttendL1 + (1 | church), REML=FALSE, data = Lefevor2020)
summary(Mod2)
AIC(Mod2) # request AIC
BIC(Mod2) # request BIC
ModB2 <- lme(ATSS ~  AttendL1, random = ~ 1|church, method="ML", na.action = na.omit, data =Lefevor2020)
summary(ModB2)
anova(Mod2) # request F-tests for fixed effects
ranova(Mod2) # request test of random effects
confint(Mod2) # request test of random effects (variance displayed as SD)
DevM2 <- anova(Mod1, Mod2)
# Extract Variances to compute R^2
var_table = as.data.frame(VarCorr(Mod2))
Mod2_var_tot = var_table[1,'vcov'] + var_table[2,'vcov'] # var_table[1,'vcov'] = L1 var; var_table[2,'vcov'] = L2 var;
tab_model(Mod1, Mod2, p.style = "numeric", show.ci = FALSE, show.df = FALSE, show.re.var = TRUE, show.aic = TRUE, show.dev = TRUE, use.viewer = TRUE, dv.labels = c("Mod1", "Mod2"), string.est = "est", string.se = "se", string.std = "Beta", string.std_se = "std se", string.p = "p", show.std = TRUE)
#can swap this statement with the "file = "TabMod_Table"" to get Viewer output or the outfile that you can open in Word
#file = "TabMod_Table.doc"
DevM2
sjPlot::plot_model (Mod2, type="pred", terms= c("AttendL1"))
sjPlot::plot_model (Mod2, type="diag")
# MODEL 3
Mod3 <- lmer(ATSS ~ AttendL1 + AttendL2 + Homogeneity + (1 | church), REML=FALSE, data = Lefevor2020)
summary(Mod3)
AIC(Mod3) # request AIC
BIC(Mod3) # request BIC
ModB3 <- lme(ATSS ~  AttendL1 +  AttendL2 + Homogeneity, random = ~ 1|church, method="ML", na.action = na.omit, data =Lefevor2020)
summary(Mod3)
anova(Mod3) # request F-tests for fixed effects
ranova(Mod3) # request test of random effects
confint(Mod3) # request test of random effects (variance displayed as SD)
devM3 <- anova(Mod1, Mod2, Mod3)
tab_model(Mod1, Mod2, Mod3, p.style = "numeric", show.ci = FALSE, show.se = TRUE, show.df = FALSE, show.re.var = TRUE, show.aic = TRUE, show.dev = TRUE, use.viewer = TRUE, dv.labels = c("Mod1", "Mod2", "Mod3"), string.est = "est", string.se = "se", string.std = "Beta", string.std_se = "std se", string.p = "p", show.std = TRUE)
#can swap this statement with the "file = "TabMod_Table"" to get Viewer output or the outfile that you can open in Word
#file = "TabMod_Table.doc"
# MODEL 2
Mod2 <- lmer(ATSS ~ AttendL1 + (1 | church), REML=FALSE, data = Lefevor2020)
summary(Mod2)
AIC(Mod2) # request AIC
BIC(Mod2) # request BIC
ModB2 <- lme(ATSS ~  AttendL1, random = ~ 1|church, method="ML", na.action = na.omit, data =Lefevor2020)
summary(ModB2)
anova(Mod2) # request F-tests for fixed effects
ranova(Mod2) # request test of random effects
confint(Mod2) # request test of random effects (variance displayed as SD)
DevM2 <- anova(Mod1, Mod2)
# Extract Variances to compute R^2
var_table = as.data.frame(VarCorr(Mod2))
Mod2_var_tot = var_table[1,'vcov'] + var_table[2,'vcov'] # var_table[1,'vcov'] = L1 var; var_table[2,'vcov'] = L2 var;
tab_model(Mod1, Mod2, p.style = "numeric", show.ci = FALSE, show.df = FALSE, show.re.var = TRUE, show.aic = TRUE, show.dev = TRUE, show.se = TRUE, use.viewer = TRUE, dv.labels = c("Mod1", "Mod2"), string.est = "est", string.se = "se", string.std = "Beta", string.std_se = "std se", string.p = "p", show.std = TRUE)
#can swap this statement with the "file = "TabMod_Table"" to get Viewer output or the outfile that you can open in Word
#file = "TabMod_Table.doc"
# MODEL 4
Mod4 <- lmer(ATSS ~ AttendL2 + AttendL1*Homogeneity +(1 | church), REML=FALSE, data = Lefevor2020)
summary(Mod4)
AIC(Mod4) # request AIC
BIC(Mod4) # request BIC
ModB3 <- lme(ATSS ~  AttendL2 + AttendL1*Homogeneity, random = ~ 1|church, method="ML", na.action = na.omit, data =Lefevor2020)
summary(Mod4)
anova(Mod4) # request F-tests for fixed effects
ranova(Mod4) # request test of random effects
confint(Mod4) # request test of random effects (variance displayed as SD)
devM4 <- anova(Mod1, Mod2, Mod3, Mod4)
tab_model(Mod1, Mod2, Mod3, Mod4, p.style = "numeric", show.ci = FALSE, show.df = FALSE, show.re.var = TRUE, show.se = TRUE, show.aic = TRUE, show.dev = TRUE, use.viewer = TRUE, dv.labels = c("Mod1", "Mod2", "Mod3", "Mod4"), string.est = "est", string.se = "se", string.std = "Beta", string.std_se = "std se", string.p = "p", show.std = TRUE)
#can swap this statement with the "file = "TabMod_Table"" to get Viewer output or the outfile that you can open in Word
#file = "TabMod_Table.doc"
View(Lefevor2020)
