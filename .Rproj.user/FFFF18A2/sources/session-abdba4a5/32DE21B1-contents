```{r include = FALSE}
options(scipen=999)
```


## Homeworked Example
The dataset for this article is publicly available on the OSF:  https://osf.io/j365w/

The associated paper is here:  https://psycnet.apa.org/record/2023-97860-001


### Scrubbing

#### Specify a research model  {-}

I want to predict the 

* proportion of time that one wore a facemask from,
  - gender 
  - metric COVID cases in their county of residence (mCOVID), 
  - proportion of county-level votes for the 2020 Presidential Candidate (PercentRepublican),
  - perceived FM stigma
  
I want the prediction to be in the very early stages of the pandemic. Thus I will use data from first wave of the up-to-24 wave study.

#### Import data {-}


```{r}
#pick one format (.rds) or the other (.csv)
raw <- readRDS("MADdf230912.rds")
#raw<- read.csv("MADdf230912.csv", header=TRUE)

nrow(raw)
```


#### Include only those who consented {-} 

Because this data is publicly posted on the Open Science Framework, it was necessary for me to already exclude those individuals. I also designed the survey so that individuals had to give consent before questions were provided. Here is example code if I had to write it.

```{r tidy=TRUE, tidy.opts=list(width.cutoff=70)}
#testing to see if my code worked
#raw <- dplyr::filter (raw, Consent == "Yes")
#or, if the value is numerical
#raw <- dplyr::filter (raw, Consent == 1)
```

```{r}
library(tidyverse)
raw <- dplyr::filter (raw, DistributionChannel != "preview")
```

#### Apply exclusionary criteria {-} 

I want to exclude all responses beyond the first.

```{r tidy=TRUE, tidy.opts=list(width.cutoff=70)}
raw <-(dplyr::filter(raw, Wave == 1))
```
At this point, these my only inclusion/exclusion criteria. I can determine how many students (who consented) completed any portion of the survey.

```{r}
nrow(raw)
```

#### Rename variables to be sensible and systematic {-} 

Lets tackle all those nonsensible Q34_1 variable names. Although not used in this particular model, they allow me to meet the homework criteria of giving sensible variable names.

These variables all ask about role changes (RCh) across employment, education, household responsibilities, care of immediate family, care of extended family, care of neighbors, volunteering, and recreation.

```{r tidy=TRUE, tidy.opts=list(width.cutoff=70)}
raw <- dplyr::rename(raw, RCh_Empl = 'Q34_1')
raw <- dplyr::rename(raw, RCh_Educ = 'Q34_2')
raw <- dplyr::rename(raw, RCh_HHold = 'Q34_6')
raw <- dplyr::rename(raw, RCh_FxCare = 'Q34_8')
raw <- dplyr::rename(raw, RCh_xFxCare = 'Q34_11')
raw <- dplyr::rename(raw, RCh_NeighCare = 'Q34_9')
raw <- dplyr::rename(raw, RCh_Volunt = 'Q34_3')
raw <- dplyr::rename(raw, RCh_Recreat = 'Q34_13')

```

#### Downsize the dataframe to the variables of interest {-} 

I will need to include:

* caseID
* WearingProp
* MetricCases
* Gender
* FMreactions


```{r tidy=TRUE, tidy.opts=list(width.cutoff=70)}
scrub_df <-(dplyr::select (raw, caseID, Gender, myPropFM_1, FMreactions_1:FMreactions_6, PercentRepublican, cases))
```

#### Provide an APA style write-up of these preliminary steps {-} 

>>This is a secondary analysis of data involved in a more comprehensive dataset that evaluated wearing facemasks in the COVID-19 pandemic. Having retrieved this data from a repository in the Open Science Framework, only those who consented to participation in the study were included. Data used in these analyses were 201 individuals who contributed data to the first wave of the multi-wave study. 

### Scoring

#### Proper formatting of the item(s) in your first predictor variable {-} 

Gender is a categorical variable. It should be structured as a factor with unordered levels:  

Because I am using the .rds form of the data from the OSF, this variable retains the former structure I assigned to it. If I needed to write the code, I would do this:

```{r}
str(scrub_df)
```


```{r}
scrub_df$gender <- factor(scrub_df$Gender, levels = c("1", "2", "3", "4", "5"), labels = c("male", "female", "transgender", "other", "no_say"))
str(scrub_df$gender)
```

#### Proper formatting of item(s) in your second predictor variable  {-} 

Items that will be in the stigma scale should be (and are) numeric in format.

#### Proper formatting of the item(s) in your third predictor variable {-} 

metric COVID cases (cases) and percent voting Republican in the 2020 election (PercentRepublican) are integer and numeric, respectively.


#### Proper formatting of the item(s) in your dependent variable {-} 

The dependent variable is proportion of the time the participant wore a facemask in public and should be numeric format.

```{r}
str(scrub_df$myPropFM_1)
```

#### Evaluate and interpret item-level missingness {-} 

The *scrub_df* is already downsized to include the item-level raw variables and the ID variable. We can continue using it.

I will create a "proportion missing" variable.

In this chunk I first calculate the number of missing (nmiss)

```{r tidy=TRUE, tidy.opts=list(width.cutoff=70)}
library(tidyverse)#needed because the script has pipes

#Calculating number and proportion of item-level missingness
scrub_df$nmiss <- scrub_df%>%
    dplyr::select(Gender:cases) %>% #the colon allows us to include all variables between the two listed (the variables need to be in order)
    is.na %>% 
    rowSums

scrub_df<- scrub_df%>%
  dplyr::mutate(prop_miss = (nmiss/11)*100) #11 is the number of variables included in calculating the proportion
```
We can grab the descriptives for the *prop_miss* variable to begin to understand our data.  I will create an object from it so I can use it with inline
```{r }
psych::describe(scrub_df$prop_miss)
```
Because I want to use the AIA approach to scoring, I'm not willing to filter out any cases yet. If I wanted to eliminate cases with egregious missing (i.e., like 75%), there is the code I would use:

```{r tidy=TRUE, tidy.opts=list(width.cutoff=70)}
scrub_df <- dplyr::filter(scrub_df, prop_miss <= 75)  #update df to have only those with at least 75% of complete data
```


CUMULATIVE CAPTURE FOR WRITING IT UP:  

>>Across cases that were deemed eligible on the basis of the inclusion/exclusion criteria, missingness ranged from 0 to 80%.

To analyze missingness at the item level, we need a df that has only the variables of interest.  That is, variables like *ID* and the *prop_miss* and *nmiss* variables we created will interfere with an accurate assessment of missingness. I will update our df to eliminate these.  

```{r tidy=TRUE, tidy.opts=list(width.cutoff=70)}
#further update to exclude the n_miss and prop_miss variables
ItemMiss_df <- scrub_df %>%
  dplyr::select (-c(caseID, nmiss, prop_miss, Gender))
```

Missing data analysis commonly looks at proportions by:

* the entire df
* rows/cases/people

```{r tidy=TRUE, tidy.opts=list(width.cutoff=70)}
#what proportion of cells missing across entire dataset
formattable::percent(mean(is.na(ItemMiss_df)))
#what proportion of cases (rows) are complete (nonmissing)
formattable::percent(mean(complete.cases(ItemMiss_df)))

```

CUMULATIVE CAPTURE FOR WRITING IT UP: 

>>Across cases that were deemed eligible on the basis of the inclusion/exclusion criteria, missingness ranged from 0 to 80%.  Across the dataset, 13.43% of cells had missing data and 65.17% of cases had nonmissing data.

We can further explore patterns of missingness with *mice:md.pattern*.


```{r eval=FALSE, tidy=TRUE, tidy.opts=list(width.cutoff=70)}
mice::md.pattern(ItemMiss_df, plot = TRUE, rotate.names = TRUE)

```

There are 7 missingness patterns. The most common (*n* = 131) have no missingness.Four missing pattens include the complete absence of the FMreactions items. This is because they were not presented to the participants if they did not wear the facemask outside of the home in the prior 7 days. We should delete those cases before moving on.


```{r tidy=TRUE, tidy.opts=list(width.cutoff=70)}
scrub_df <- dplyr::filter(scrub_df, prop_miss <= 62)  #update df to have only those with at least 75% of complete data
```

This takes us to 164 cases.

#### Score any scales/subscales {-} 

```{r}
StigmaFelt_vars <- c('FMreactions_1', 'FMreactions_2','FMreactions_3','FMreactions_4','FMreactions_5','FMreactions_6')

scrub_df$StigmaFelt <- sjstats::mean_n(scrub_df[, StigmaFelt_vars], .65)
```


#### Evaluate and interpret scale-level missingness {-} 

To evaluate scale level missingness, let's create a df with the focal variables.

```{r tidy=TRUE, tidy.opts=list(width.cutoff=70)}
scored <- dplyr::select (scrub_df, gender, StigmaFelt, myPropFM_1, cases, PercentRepublican)

ScoredCaseMiss <- nrow(scored) #I produced this object for the sole purpose of feeding the number of cases into the inline text, below
ScoredCaseMiss
```

Before we start our formal analysis of missingness at the scale level, let's continue to scrub by eliminating cases that will have too much missingness. In the script below we create a variable that counts the number of missing variables and then creates a proportion by dividing it by the number of total variables.

Using the *describe()* function from the *psych* package, we can investigate this variable.

```{r tidy=TRUE, tidy.opts=list(width.cutoff=70)}
library(tidyverse)
#Create a variable (n_miss) that counts the number missing
scored$n_miss <- scored%>%
 is.na %>% 
rowSums

#Create a proportion missing by dividing n_miss by the total number of variables (6)
#Pipe to sort in order of descending frequency to get a sense of the missingness
scored<- scored%>%
mutate(prop_miss = (n_miss/7)*100)%>%
  arrange(desc(n_miss))

psych::describe(scored$prop_miss)

```


We need to decide what is our retention threshhold. Twenty percent seems to be a general rule of thumb.  Let's delete all cases with missingness at 20% or greater.

```{r tidy=TRUE, tidy.opts=list(width.cutoff=70)}
#update df to have only those with at least 20% of complete data (this is an arbitrary decision)
scored <- dplyr::filter(scored, prop_miss <= 20) 

#the variable selection just lops off the proportion missing
scored <-(select (scored, gender, StigmaFelt, myPropFM_1, cases, PercentRepublican)) 

#this produces the number of cases retained
nrow(scored)
```

CUMULATIVE CAPTURE FOR WRITING IT UP:  

>>Across cases that were deemed eligible on the basis of the inclusion/exclusion criteria, missingness ranged from 0 to 80%.  Across the dataset, 13.43% of cells had missing data and 65.17% of cases had nonmissing data.

>>Across the 164 cases for which the scoring protocol was applied, missingness ranged from 0 to 14.29%.

Now, at the scale level, we look at missingness as the proportion of 

* individual cells across the scored dataset, and
* rows/cases with nonmissing data

```{r tidy=TRUE, tidy.opts=list(width.cutoff=70)}

#percent missing across df
formattable::percent(mean(is.na(scored)))
#percent of rows with nonmissing data
formattable::percent(mean(complete.cases(scored))) 

```

CUMULATIVE CAPTURE FOR WRITING IT UP: 

>>Across cases that were deemed eligible on the basis of the inclusion/exclusion criteria, missingness ranged from 0 to 80%.  Across the dataset, 13.43% of cells had missing data and 65.17% of cases had nonmissing data.

>>Across the 164 cases for which the scoring protocol was applied, missingness ranged from 0 to 14.29%. In this dataset we had less than 3.35% missing across the df; 80% of the rows had nonmissing data.

Let's look again at missing patterns and mechanisms.

Returning to the *mice* package, we can use the *md.pattern()* function to examine a matrix with the number of columns 1 in which each row corresponds to a missing data pattern (0 = observed, 0 = missing). The rows and columns are sorted in increasing amounts of missing information. The last column and row contain row and column counts, respectively.

The corresponding figure shows non-missing data in blue; missing data in red.

```{r message=FALSE, warning=FALSE, tidy=TRUE, tidy.opts=list(width.cutoff=70)}
mice_ScaleLvl <- mice::md.pattern(scored, plot = TRUE, rotate.names=TRUE)
mice_ScaleLvl
```

There are *3* rows of data because there are only *3* patterns of missingness. The most common pattern is non-missing data (*n* = 131). One case is missing the gender variable. If our statistical choice uses pairwise deletion (i.e., the case is eliminated if one or more variables in the model has missing data), our sample size will be 131 As we will earn in later chapters, there are alternatives (i.e., specifying a FIML option in analyses that use maximum likelihood estimators) that can use all of the cases -- even those with missing data. 

#### Represent your work in an APA-style write-up (added to the writeup in the previous chapter {-} 

>>Available item analysis (AIA; [@parent_handling_2013]) is a strategy for managing missing data that uses available data for analysis and excludes cases with missing data points only for analyses in which the data points would be directly involved. Parent (2013) suggested that AIA is equivalent to more complex methods (e.g., multiple imputation) across a number of variations of sample size, magnitude of associations among items, and degree of missingness. Thus, we utilized Parent’s recommendations to guide our approach to managing missing data. Missing data analyses were conducted with tools in base R as well as the R packages, *psych* (v. 2.3.6) and *mice* (v. 3.16.0). 

>>Across cases that were deemed eligible on the basis of the inclusion/exclusion criteria, missingness ranged from 0 to 80%.  Across the dataset, 13.43% of cells had missing data and 65.17% of cases had nonmissing data.

>>Across the 164 cases for which the scoring protocol was applied, missingness ranged from 0 to 14.29%. In this dataset we had less than 3.35% missing across the data set; 80% of the rows had nonmissing data.

### Data Dx

#### Calculate alpha coefficients for scales/subscales {-} 

To calculate the alpha coefficients, we need item-level data. We will return to *scrub_df* that contains the item-level data.

```{r tidy=TRUE, tidy.opts=list(width.cutoff=70)}
#alpha for the traditional pedagogy scale
psych::alpha(scrub_df[c("FMreactions_1", "FMreactions_2", "FMreactions_3", "FMreactions_4", "FMreactions_5", "FMreactions_6")])
```
>>Cronbach's alpha for the traditional pedagogy scale was 0.84.


This value is above the .80 threshold.


#### Evaluate univariate normality (skew, kurtosis, Shapiro-Wilks) {-} 

We can inspect univariate normality by examining the skew and kurtosis values of the continuously scored variables.

```{r tidy=TRUE, tidy.opts=list(width.cutoff=70)}
psych::describe(scored, type=1)
```

When we use the "type=1" argument, the skew and kurtosis indices in the *psych* package can be interpreted according to Kline's [-@kline_data_2016] guidelines. 

>>For all continuously scaled variables except metric COVID cases, skew and kurtosis values for our continuously scaled variables fall below the thresholds of concern (i.e., absolute value of 3 for skew; absolute value of 10 for kurtosis) identified by Kline [-@kline_data_2016]. Metric COVID case counts were positively skewed (6.68) and kurtotic (57.94).

Still at the univariate level, we can apply the Shapiro-Wilk test of normality to each of our continuously scaled variables. When the $p$ value is < .05, the variable's distribution is deviates from a normal distribution to a degree that is statistically significant. Below, the plotting of the histogram with a normal curve superimposed shows how the distribution approximates one that is normal.

```{r tidy=TRUE, tidy.opts=list(width.cutoff=70)}
#The shapiro-test is in base R; it's specification is simple:  shapiro.test(df$variable)
#I added the object (and had to list it below) so I can use the inline text function
shapiro.test(scored$StigmaFelt)
shapiro.test(scored$cases)
shapiro.test(scored$PercentRepublican)
shapiro.test(scored$myPropFM_1)
```
All variables differed from a normal distribution in a statistically significant way. This included stigma felt $(W = 0.931, p < .001)$, proportion of time wearing a facemask $(W = 0.732, p < .001)$, metric COVID cases $(W = 0.354, p < .001)$, and proportion of county voting for the Republican candidate $(W = 0.904, p < .001)$.



Obtaining a quick *psych::pairs.panel* can provide a quick glimpse of the distribution.

```{r tidy=TRUE, tidy.opts=list(width.cutoff=70)}
psych::pairs.panels(scored, stars = TRUE, lm = TRUE)
```

CUMULATIVE CAPTURE FOR THE APA STYLE WRITE-UP:  

>>For all continuously scaled variables except metric COVID cases, skew and kurtosis values for our continuously scaled variables fall below the thresholds of concern (i.e., absolute value of 3 for skew; absolute value of 10 for kurtosis) identified by Kline [-@kline_data_2016]. Metric COVID case counts were positively skewed (6.68) and kurtotic (57.94).

>>Regarding the distributional characteristics of the data, skew and kurtosis values of the variables fell below the values of 3 (skew) and 10 (kurtosis) that Kline suggests are concerning [-@kline_principles_2016]. Results of the Shapiro-Wilk test of normality indicated that all variables differed from a normal distribution in a statistically significant way. This included stigma felt $(W = 0.931, p < .001)$, proportion of time wearing a facemask $(W = 0.732, p < .001)$, metric COVID cases $(W = 0.354, p < .001)$, and proportion of county voting for the Republican candidate $(W = 0.904, p < .001)$..

#### Evaluate multivarite normality (Mahalanobis test) {-} 

In more complex models, multivariate normality is probably a more useful analysis. Although I am teaching this evaluation in advance of the formal analysis, as demonstrated in many of [ReCentering Psych Stats ANOVA chapters](https://lhbikos.github.io/ReCenterPsychStats/analysis-of-variance.html), this can also be assessed by examining the distribution of residuals after the analysis is complete.

Multivariate normality can be assessed with the continuously scaled variables. The code below includes the only two continuously scaled variables.  The code simultaneously (a) appends the df with a Mahalanobis value and (b) creates a QQ plot. Dots that stray from the line are the scores that are contributing to multivariate non-normality.
```{r tidy=TRUE, tidy.opts=list(width.cutoff=70)}
scored$Mahal <- psych::outlier(scored[c("myPropFM_1", "cases", "PercentRepublican", "StigmaFelt")]) 
```

We can analyze the distributional characteristics of the Mahalanobis values with *psych::describe*.
It is possible, then to analyze the Mahalanobis distance values.

```{r tidy=TRUE, tidy.opts=list(width.cutoff=70)}
psych::describe(scored$Mahal)
```
Using this information we can determine cases that have a Mahalanobis distance values that exceeds three standard deviations around the median.  In fact, we can have these noted in a column in the dataframe.

```{r warning=FALSE, tidy=TRUE, tidy.opts=list(width.cutoff=70) }
#creates a variable indicating TRUE or FALSE if an item is an outlier
scored$MOutlier <- dplyr::if_else(scored$Mahal > (median(scored$Mahal) + (3*sd(scored$Mahal))), TRUE, FALSE)

#shows us the first 6 rows of the data so we can see the new variables (Mahal, MOutlier)
head(scored)

```


```{r tidy=TRUE, tidy.opts=list(width.cutoff=70)}
library(tidyverse)
#counts frequency TRUE and FALSE indicating outlier or not
OutlierCount<- scored%>%
  dplyr::count(MOutlier)

#calculating how many outliers a slightly different way
nrow(scored) - OutlierCount 
```
When we identify outliers we often ask if we should delete them or transform the data. A general rule of thumb is to look for "jumps" in the Mahalanobis distance values. If they are progressing steadily and there is no "jump," researchers will often retain the outliers.

In this case, I do see a jump. When I sort the df on Mahal values, the jump from 13.92 to 101. Therefore, I think I will delete cases with Mahalanobis values greater than 10 (a number I "just picked").

```{r tidy=TRUE, tidy.opts=list(width.cutoff=70)}
scored <- dplyr::filter (scored, caseID != "177")
```


>>We evaluated multivariate normality with the Mahalanobis distance test. Specifically, we used the *psych::outlier()* function  and included both continuous variables in the calculation. Our visual inspection of the Q-Q plot suggested that the plotted line strayed from the straight line as the quantiles increased.  Additionally, we appended the Mahalanobis distance scores as a variable to the data. Analyzing this variable, we found that 1 cases exceed three standard deviations beyond the median. Because there was a substantial "jump" between the non-outliers and this case we deleted it. 

#### Represent your work in an APA-style write-up (added to the writeup in the previous chapter) {-} 

>>This is a secondary analysis of data involved in a more comprehensive dataset that included students taking multiple statistics courses (*N* = 310). Having retrieved this data from a repository in the Open Science Framework, only those who consented to participation in the study were included. Data used in these analyses were 84 students who completed the multivariate clas. 

>>Available item analysis (AIA; [@parent_handling_2013]) is a strategy for managing missing data that uses available data for analysis and excludes cases with missing data points only for analyses in which the data points would be directly involved. Parent (2013) suggested that AIA is equivalent to more complex methods (e.g., multiple imputation) across a number of variations of sample size, magnitude of associations among items, and degree of missingness. Thus, we utilized Parent’s recommendations to guide our approach to managing missing data. Missing data analyses were conducted with tools in base R as well as the R packages, *psych* (v. 2.3.6) and *mice* (v. 3.16.0). 

>>Across cases that were deemed eligible on the basis of the inclusion/exclusion criteria, missingness ranged from 0 to 80%.  Across the dataset, 13.43% of cells had missing data and 65.17% of cases had nonmissing data.

>>For all continuously scaled variables except metric COVID cases, skew and kurtosis values for our continuously scaled variables fall below the thresholds of concern (i.e., absolute value of 3 for skew; absolute value of 10 for kurtosis) identified by Kline [-@kline_data_2016]. Metric COVID case counts were positively skewed (6.68) and kurtotic (57.94).

>>Regarding the distributional characteristics of the data, skew and kurtosis values of the variables fell below the values of 3 (skew) and 10 (kurtosis) that Kline suggests are concerning [-@kline_principles_2016]. Results of the Shapiro-Wilk test of normality indicated that all variables differed from a normal distribution in a statistically significant way. This included stigma felt $(W = 0.931, p < .001)$, proportion of time wearing a facemask $(W = 0.732, p < .001)$, metric COVID cases $(W = 0.354, p < .001)$, and proportion of county voting for the Republican candidate $(W = 0.904, p < .001)$

>>We evaluated multivariate normality with the Mahalanobis distance test. Specifically, we used the *psych::outlier()* function  and included both continuous variables in the calculation. Our visual inspection of the Q-Q plot suggested that the plotted line strayed from the straight line as the quantiles increased.  Additionally, we appended the Mahalanobis distance scores as a variable to the data. Analyzing this variable, we found that 1 cases exceed three standard deviations beyond the median. Because there was a substantial "jump" between the non-outliers and this case we deleted it. 

#### Conduct a quick analysis (e.g., regression, ANOVA) including at least three variables {-} 

```{r tidy=TRUE, tidy.opts=list(width.cutoff=70)}
FM_fit <- lm(myPropFM_1 ~ gender + StigmaFelt + cases + PercentRepublican, data = scored)
summary(FM_fit)
```
### Results

>>Results of a multiple regression predicting the predicting the proportion of time that individuals wore facemasks in the early months of the COVID-19 pandemic indicated that neither gender ($B = -6.77, p = 0.452), nor COVID case counts ($B = 0.001, p = 0.380, nor percent of county that voted Republican ($B = -11.63, p = 0.559)) led to statistically significant differences. In contrast, facemask stigma had strong, negative effect wearing facemasks ($B = -11.51, p < 0.003). That is, as stigma increased, the proportion of time one wore a facemask decreased. The model accounted for 10% of the variance and was statistically significant ($p , 0.010$). Means, standard deviations, and correlations among variables are presented in Table 1; results of the regression model are presented in Table 2.

```{r tidy=TRUE, tidy.opts=list(width.cutoff=70)}
apaTables::apa.cor.table(scored[c("myPropFM_1", "gender", "PercentRepublican", "cases", "StigmaFelt")], table.number = 1, show.sig.stars = TRUE, filename = "Table1__DataDx_HW.doc")
```

```{r tidy=TRUE, tidy.opts=list(width.cutoff=70)}
apaTables::apa.reg.table(FM_fit, table.number = 2, filename = "FM_table.doc")
```