"0",""
"0","dat <- dat %>% dplyr::mutate(ID = row_number())"
"0","#moving the ID number to the first column; requires "
"0","dat <- dat%>% dplyr::select(ID, everything())"
"0",""
"0","Lefevor2017 <- dat%>%"
"0","  select(ID, client, Session, SexualIdentity, Religion1, Religion2, Anxiety)"
"0",""
"0","Lefevor2017$ClientID <- rep(c(1:12825), each = 5)"
"0","#rounded Sexual Identity into dichotomous variable"
"0","#85% were heterosexual, "
"0",""
"0","#The following variables should be L2, but were simulated as if they were L1"
"0","Lefevor2017$Rel1 <- as.numeric(robumeta::group.mean(Lefevor2017$Religion1,Lefevor2017$ClientID))#aggregated at group mean"
"0","Lefevor2017$Rel2 <- as.numeric(robumeta::group.mean(Lefevor2017$Religion2,Lefevor2017$ClientID))#aggregated at group mean"
"0","Lefevor2017$SxID <- as.numeric(robumeta::group.mean(Lefevor2017$SexualIdentity,Lefevor2017$ClientID))#aggregated at group mean"
"0",""
"0","#Rel2 has contrast codes for dominant religion (DR, 0), nondominant religious (NDR, 1) and nondominant unspecified (NDU, -1)"
"0","#Strategy is to figure out the raw score associated with the percentile rank of  -1 and 0, to set the breakpoints for the coding"
"0","#NDU coded as -1"
"0","#19.2+13.5+9.6"
"0","#NDU has bottom 42.3 percent"
"0",""
"0","#DR coded as 0, so quantile cut will be 42.3 + 52.7 = 95th"
"0","#33.4 + 19.3"
"0","#52.7% of sample (according to article) was DR"
"0","#must look up percentile ranks for 5% and 57.5%"
"0",""
"0","#NDR"
"0","#2.3+1+1+.7"
"0","#NDR has 5% of sample"
"0","#42.3+52.7"
"0","#quantile(Lefevor2017$Religion2, probs = c(.423, .95))"
"0","#effects coding the second Religion variable so that NDU = -1, DR = 0, NDR = 1"
"0","Lefevor2017$Rel2L2 <- ifelse(Lefevor2017$Religion2 <= -3.0877087, -1, "
"0","                             ifelse(Lefevor2017$Religion2 >= -3.0877087 & Lefevor2017$Religion2 <= 0.9299491, 0,1))"
"0",""
"0","#checking work"
"0","#Rel2L2_table <- table(Lefevor2017$Rel2L2)"
"0","#prop.table(Rel2L2_table)"
"0","#Lefevor2017 %>%"
"0","#count(Rel2L2)"
"0",""
"0","#creating the first religion variable where DR is 2 and NDR and NDU are both -1"
"0","Lefevor2017$Rel1L2 <- plyr::mapvalues(Lefevor2017$Rel2L2, from = c(-1, 0, 1), to = c(-1, 2, -1))"
"0","Lefevor2017$DRel0 <- plyr::mapvalues(Lefevor2017$Rel2L2, from = c(-1, 0, 1), to = c(1, 0, 1))"
"0",""
"0","#checking to make sure that 52.7% are coded 2 (DR)"
"0","#Rel1L2_table <- table(Lefevor2017$Rel1L2)"
"0","#prop.table(Rel1L2_table)"
"0",""
"0","#heterosexual is -1"
"0","#LGBTQIA+ is 1"
"0","#quantile(Lefevor2017$SxID, probs = c(.85))"
"0","Lefevor2017$SexID <- ifelse(Lefevor2017$SxID <= 1.203468, -1,1)"
"0","Lefevor2017$Het0 <- plyr::mapvalues(Lefevor2017$SexID, from = c(-1,1), to = c(0,1))"
"0","#SexID_table <- table(Lefevor2017$SexID)"
"0","#prop.table(SexID_table)"
"0",""
"0","#creating a variable representing the session number for each client, in the article up to 20 sessions were allowed. "
"0","#install.packages(""scales"")"
"0",""
"0","#Right from the beginning I centered this so that 0 would represent intake"
"0","#Lefevor2017$Session0 <- as.integer(scales::rescale(Lefevor2017$Session, to = c(0, 19)))"
"0","Lefevor2017$SessionT <- scales::rescale(Lefevor2017$Session, to = c(0, 19))"
"0",""
"0","#creating session waves (1 thru 5) by rank ordering within each person's variable the continuous variable Session that was created in the original simulation"
"0",""
"0","LefevorTIME <- Lefevor2017%>%"
"0","  dplyr::group_by(ClientID) %>%"
"0","  dplyr::mutate(Index = rank(Session))"
"0",""
"0","#selecting the simulated variables"
"0","LefevorTIME_sim <- LefevorTIME%>%"
"0","  dplyr::select(ClientID, Index, SessionT, Anxiety, DRel0, Het0)"
"0",""
"0","#rearranging variables so that IDs are together"
"0","LefevorTIME_sim <- LefevorTIME_sim%>%"
"0","  dplyr::select(ClientID, Index, SessionT, Anxiety, DRel0, Het0)"
"0","#resorting data so that each person is together"
"0","LefevorTIME_sim <- dplyr::arrange(LefevorTIME_sim, ClientID, Index)"
"0",""
"0","#In the transition from long-to-wide, it seems like you can only do one L1 variable at a time"
"0","#When there are multiple L1 and L2 vars, put all L2 vars on left of tilde"
"0","#The wave/index function should come next; this should be finite (like integers of 1,2,3,4) with a maximum"
"0","#Put the name of the SINGLE L1 variable in the concatonated list"
"0","library(data.table)"
"2","data.table 1.14.8 using 10 threads (see ?getDTthreads).  Latest news: r-datatable.com
"
"2","
Attaching package: ‘data.table’

"
"2","The following objects are masked from ‘package:lubridate’:

    hour, isoweek, mday, minute, month, quarter, second, wday, week, yday, year

"
"2","The following objects are masked from ‘package:dplyr’:

    between, first, last

"
"2","The following object is masked from ‘package:purrr’:

    transpose

"
"0","LfvrTWp1<-reshape2::dcast(LefevorTIME_sim, ClientID + DRel0 + Het0 ~ Index, value.var = c(""Index""))"
"0","#rename the anxiety variable"
"0","LfvrTWp1<-  rename(LfvrTWp1, Index1 = ""1"", Index2 = ""2"", Index3 = ""3"", Index4 = ""4"", Index5 = ""5"")"
"0","LfvrTWp2<-reshape2::dcast(LefevorTIME_sim, ClientID ~ Index, value.var = c(""Anxiety""))"
"0","#rename the anxiety variable"
"0","LfvrTWp2<-  rename(LfvrTWp2, Anx1 = ""1"", Anx2 = ""2"", Anx3 = ""3"", Anx4 = ""4"", Anx5 = ""5"")"
"0","#For remaining L1 variable, do them one at a time -- key them from the person-level ID and the wave/index."
"0","LfvrTWp3<-reshape2::dcast(LefevorTIME_sim, ClientID ~ Index, value.var = c(""SessionT""))"
"0","LfvrTWp3<-  dplyr::rename(LfvrTWp3, Sess1 = ""1"", Sess2 = ""2"", Sess3 = ""3"", Sess4 = ""4"", Sess5 = ""5"")"
"0","#Next, join the dataframes by the person-level ID"
"0","#Only two can be joined at a time"
"0","LfvrTWide <- dplyr::full_join(LfvrTWp1, LfvrTWp2, by = c(""ClientID""))"
"0","LfvrTWide <- dplyr::full_join(LfvrTWide, LfvrTWp3,  by = c(""ClientID""))"
