{"frames":[{"func":"lavaan::summary(LewMLEfit, standardized = TRUE, rsq = T, fit = TRUE, \n    ci = TRUE)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"lavaan::summary(LewMLEfit, standardized = TRUE, rsq = T, fit = TRUE, \n    ci = TRUE)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".local(object, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"lav_object_summary(object = object, header = header, fit.measures = fit.measures, \n    estimates = estimates, ci = ci, fmi = fmi, std = std, standardized = standardized, \n    remove.step1 = remove.step1, cov.std = cov.std, rsquare = rsquare, \n    std.nox = std.nox, efa = efa.flag, fm.args = fm.args, modindices = modindices)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"parameterEstimates(object, ci = ci, standardized = standardized, \n    rsquare = rsquare, fmi = fmi, cov.std = cov.std, remove.eq = FALSE, \n    remove.system.eq = TRUE, remove.ineq = FALSE, remove.def = FALSE, \n    remove.nonfree = FALSE, remove.step1 = remove.step1, output = \"text\",  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"data.frame(lhs = NAMES, op = rep(\"r2\", nel), rhs = NAMES, block = block, \n    group = group, est = unlist(r2), stringsAsFactors = FALSE)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(\"row names contain missing values\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in data.frame(lhs = NAMES, op = rep(\"r2\", nel), rhs = NAMES, block = block,  : \n  row names contain missing values\n"}